import{_ as e,c as s,o as t,a}from"./app.62528036.js";const p="/vitepress-theme-mochi/assets/001_deploy-gitpage-jekyll-404.ab73bd0d.png",y=JSON.parse('{"title":"VitePress 部署在 Github Pages 成功后资源却 404","titleTemplate":false,"description":"","frontmatter":{"date":"2023-01-06 20:30:28","title":"VitePress 部署在 Github Pages 成功后资源却 404","titleTemplate":false,"author":"Mochi","outline":[2,4],"categories":["post"],"tags":["vitepress","pit"]},"headers":[],"relativePath":"_POSTS/pits/001_deploy-gitpage-jekyll.md","lastUpdated":1673149136000}'),l={name:"_POSTS/pits/001_deploy-gitpage-jekyll.md"},n=a('<h1 id="vitepress-部署在-github-pages-成功后资源却-404" tabindex="-1">VitePress 部署在 Github Pages 成功后资源却 404 <a class="header-anchor" href="#vitepress-部署在-github-pages-成功后资源却-404" aria-hidden="true">#</a></h1><hr><p>在部署 VitePress 至 Github Pages 时, 遇见了一个奇怪的现象：除了主页可以访问, 其它的文件夹资源访问都是 404。</p><p><img src="'+p+`" alt="gitpage 部署成功后资源 404"></p><p>刚开始以为是本地哪出错了, 发现 <code>pnpm serve</code> 都一切正常, 且另外一个 vitepress demo 在 gitpage 都是正常的。</p><p>心态开始崩了...🤮</p><p>自查一番无果后直至看见了 <a href="https://segmentfault.com/q/1010000019587945" target="_blank" rel="noreferrer">https://segmentfault.com/q/1010000019587945</a> 这个帖子, 才明白了问题到底出在哪。</p><p>我的文件目录是这样的：</p><div class="language-text"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki material-palenight has-highlighted-lines"><code><span class="line"><span style="color:#A6ACCD;">mochi-blog/</span></span>
<span class="line"><span style="color:#A6ACCD;">└── docs/</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">    └── _POSTS/</span></span>
<span class="line"><span style="color:#A6ACCD;">        └── vitepress/</span></span>
<span class="line"><span style="color:#A6ACCD;">            ├── 001_vitepress.md</span></span>
<span class="line"><span style="color:#A6ACCD;">            └── 002_vitepress-theme-mochi.md</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><span class="text-red-400">Github Pages 默认是基于 <a href="http://jekyllcn.com/" target="_blank" rel="noreferrer">Jekyll</a> 构建的</span>, Jekyll 是一个将纯文本转换为静态网站的工具, 它构建的网站各种目录都是特定的以下划线 <code>_</code> 开头命名的文件夹, 如 <code>_layouts</code>、<code>_posts</code>, 所以 <span class="text-red-400">Jekyll 会忽略其它以下划线开头的文件夹和文件</span>。</p><p>如果想继续使用以 <code>_</code> 命名的文件项目结构, 可以在项目根目录下添加一个 <code>.nojekyll</code> 的空白文件, 它的作用就是告诉 GitHub Pages 当前网站不是基于 Jekyll 构建的, 不要忽略下划线开头的文件和文件夹。</p><p>如果是部署在自己的服务器上, 可以把 <code>.nojekyll</code> 删掉, 一切正常。</p>`,12),o=[n];function i(c,r,d,_,h,g){return t(),s("div",null,o)}const u=e(l,[["render",i]]);export{y as __pageData,u as default};
